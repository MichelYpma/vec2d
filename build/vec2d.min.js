!function(){function a(a,b){this._axes=new e(2),this._axes[0]=a,this._axes[1]=b}function b(a,b){this.x=a,this.y=b}function c(){}a.prototype={setAxes:function(a,b){return this._axes[0]=a,this._axes[1]=b,this},getX:function(){return this._axes[0]},setX:function(a){return this._axes[0]=a,this},getY:function(){return this._axes[1]},setY:function(a){return this._axes[1]=a,this},toString:function(a){return a?"("+Math.round(this.getX())+", "+Math.round(this.getY())+")":"("+this.getX()+", "+this.getY()+")"},toArray:function(){return new Array(this._axes[0],this._axes[1])},toObject:function(){return{x:this._axes[0],y:this._axes[1]}},add:function(a){return this._axes[0]+=a._axes[0],this._axes[1]+=a._axes[1],this},subtract:function(a){return this._axes[0]-=a._axes[0],this._axes[1]-=a._axes[1],this},equals:function(a){return a._axes[0]==this._axes[0]&&a._axes[1]==this._axes[1]},multiplyByVector:function(a){return this._axes[0]*=a._axes[0],this._axes[1]*=a._axes[1],this},divideByVector:function(a){return this._axes[0]/=a._axes[0],this._axes[1]/=a._axes[1],this},multiplyByScalar:function(a){return this._axes[0]*=a,this._axes[1]*=a,this},divideByScalar:function(a){return this._axes[0]/=a,this._axes[1]/=a,this},normalise:function(){return this.multiplyByScalar(1/this.magnitude())},normalize:function(){return this.normalise()},unit:function(){return this.normalise()},magnitude:function(){return Math.sqrt(this._axes[0]*this._axes[0]+this._axes[1]*this._axes[1])},length:function(){return this.magnitude()},lengthSq:function(){return this._axes[0]*this._axes[0]+this._axes[1]*this._axes[1]},dot:function(a){return a._axes[0]*this._axes[0]+a._axes[1]*this._axes[1]},cross:function(a){return this._axes[0]*a._axes[1]-this._axes[1]*a._axes[0]},reverse:function(){return this._axes[0]=-this._axes[0],this._axes[1]=-this._axes[1],this},abs:function(){return this._axes[0]=Math.abs(this._axes[0]),this._axes[1]=Math.abs(this._axes[1]),this},zero:function(){return this._axes[0]=this._axes=0,this},rotate:function(a){var b=Math.cos(a),c=Math.sin(a),d=this._axes[0],e=this._axes[1];return this._axes[0]=d*b-e*c,this._axes[1]=d*c+e*b,this},clone:function(){return new a(this._axes[0],this._axes[1])}},b.prototype={setAxes:function(a,b){return this.x=a,this.y=b,this},getX:function(){return this.x},setX:function(a){return this.x=a,this},getY:function(){return this.y},setY:function(a){return this.y=a,this},toString:function(a){return a?"("+Math.round(this.getX())+", "+Math.round(this.getY())+")":"("+this.getX()+", "+this.getY()+")"},toArray:function(){return new Array(this.x,this.y)},toObject:function(){return{x:this.x,y:this.y}},add:function(a){return this.x+=a.x,this.y+=a.y,this},subtract:function(a){return this.x-=a.x,this.y-=a.y,this},equals:function(a){return a.x==this.x&&a.y==this.y},multiplyByVector:function(a){return this.x*=a.x,this.y*=a.y,this},divideByVector:function(a){return this.x/=a.x,this.y/=a.y,this},multiplyByScalar:function(a){return this.x*=a,this.y*=a,this},divideByScalar:function(a){return this.x/=a,this.y/=a,this},normalise:function(){return this.multiplyByScalar(1/this.magnitude())},normalize:function(){return this.normalise()},unit:function(){return this.normalise()},magnitude:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},length:function(){return this.magnitude()},lengthSq:function(){return this.x*this.x+this.y*this.y},dot:function(a){return a.x*this.x+a.y*this.y},cross:function(a){return this.x*a.y-this.y*a.x},reverse:function(){return this.x=-this.x,this.y=-this.y,this},abs:function(){return this.x=Math.abs(this.x),this.y=Math.abs(this.y),this},rotate:function(a){var b=Math.cos(a),c=Math.sin(a),d=this.x,e=this.y;return this.x=d*b-e*c,this.y=d*c+e*b,this},zero:function(){return this.x=this.y=0,this},clone:function(){return new b(this.x,this.y)}};var d=!1,e=Array;c.prototype={ArrayVector:a,ObjectVector:b,create:function(c,e){return d===!0?new b(c,e):new a(c,e)},random:function(a,b,c,d){var e=a+(b-a)*Math.random(),f=c+(d-c)*Math.random();return this.create(e,f)},abs:function(a){return this.create(Math.abs(a.getX(),a.getY()))},useStandardArrays:function(){d=!1,e=Array},useFloat32Arrays:function(){d=!1,e=Float32Array},useObjects:function(){d=!0},add:function(a,b){return this.create(a.getX()+b.getX(),a.getY()+b.getY())},subtract:function(a,b){return this.create(a.getX()-b.getX(),a.getY()-b.getY())},equals:function(a,b){return a.equals(b)},vectorTimesVector:function(a,b){return this.create(a.getX()*b.getX(),a.getY()*b.getY())},vectorTimesScalar:function(a,b){return this.create(a.getX()*b,a.getY()*b)},nomalise:function(a){return this.timesScalar(a,1/a.magnitude())},normalize:function(a){return this.normalise(a)},unit:function(a){return this.normalise(a)},dot:function(a,b){return a.getX()*b.getX()+a.getY()*b.getY()},cross:function(a,b){return a.getX()*b.getY()-a.getY()*b.getX()},magnitude:function(a){return a.magnitude()},length:function(a){return a.magnitude()},rotate:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=a.getX(),f=a.getY(),g=e*c-f*d,h=e*d+f*c;return this.create(g,h)},distance:function(a,b){var c=a.getX()-b.getX(),d=a.getY()-b.getY();return Math.sqrt(c*c+d*d)},reverse:function(a){return this.create(-a.getX(),-a.getY())}},"undefined"!=typeof window?window.Vec2D=new c:module.exports=new c}();